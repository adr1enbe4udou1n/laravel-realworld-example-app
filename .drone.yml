kind: pipeline
type: docker
name: default

steps:
  - name: restore-cache
    image: drillster/drone-volume-cache
    volumes:
      - name: cache
        path: /cache
    settings:
      restore: true
      mount:
        - ./vendor

  - name: build
    image: registry.okami101.io/adr1enbe4udou1n/php-qa:8.1
    environment:
      DB_CONNECTION: pgsql
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: main
      DB_USERNAME: main
      DB_PASSWORD: main
    commands:
      - rm .env.testing
      - composer install
      - composer format -- --dry-run
      - composer analyse
      - sleep 10 # Wait for PostgreSQL service starting
      - composer test

  - name: image-app
    image: plugins/docker
    settings:
      registry: registry.okami101.io
      repo: registry.okami101.io/adr1enbe4udou1n/laravel-realworld-app
      tags: latest
      username:
        from_secret: registry_username
      password:
        from_secret: registry_password

  - name: image-web
    image: plugins/docker
    settings:
      registry: registry.okami101.io
      repo: registry.okami101.io/adr1enbe4udou1n/laravel-realworld-web
      tags: latest
      username:
        from_secret: registry_username
      password:
        from_secret: registry_password
      dockerfile: docker/nginx/Dockerfile

  - name: rebuild-cache
    image: drillster/drone-volume-cache
    volumes:
      - name: cache
        path: /cache
    settings:
      rebuild: true
      mount:
        - ./vendor

  - name: deploy
    image: appleboy/drone-ssh
    settings:
      host: front.okami101.io
      port: 2222
      username: okami
      key:
        from_secret: swarm_ssh_key
      script:
        - docker service update --image registry.okami101.io/adr1enbe4udou1n/laravel-realworld-app:latest laravelrealworld_app --with-registry-auth
        - docker service update --image registry.okami101.io/adr1enbe4udou1n/laravel-realworld-web:latest laravelrealworld_web --with-registry-auth

volumes:
  - name: cache
    host:
      path: /tmp/cache

services:
  - name: db
    image: postgres:14
    environment:
      POSTGRES_USER: main
      POSTGRES_PASSWORD: main
      POSTGRES_DB: main

image_pull_secrets:
  - dockerconfig

trigger:
  event:
    - push
    - pull_request
